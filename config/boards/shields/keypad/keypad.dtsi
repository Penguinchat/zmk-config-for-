/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/led/led.h>
#include "keypad-layouts.dtsi"
#include <dt-bindings/pwm/pwm.h>
/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,physical-layout = &physical_layout0;
        zmk,underglow = &led_strip;
        zmk,battery = &vbatt;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <5>;
        rows = <5>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) 
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) 
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) 
            RC(3,0) RC(3,1) RC(3,2) RC(3,3)
            RC(4,0) RC(4,1) RC(4,2) RC(0,4) RC(1,4) 
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";

        diode-direction = "col2row";
		col-gpios
			= <&gpio0 17 GPIO_ACTIVE_HIGH>
			, <&gpio0 15 GPIO_ACTIVE_HIGH>
			, <&gpio0 20 GPIO_ACTIVE_HIGH>
			, <&gpio0 22 GPIO_ACTIVE_HIGH>
      		, <&gpio0 26 GPIO_ACTIVE_HIGH>
			;
		row-gpios
			= <&gpio0 12 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio1 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			;

    };



    one_encoder: encoder_one {
        compatible = "alps,ec11";
        a-gpios = <&gpio0 31 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 29 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
        status = "okay";
    };

    two_encoder: encoder_two {
        compatible = "alps,ec11";
        a-gpios = <&gpio1 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
        status = "okay";
    };

    three_encoder: encoder_three {
        compatible = "alps,ec11";
        a-gpios = <&gpio0 28 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
        status = "okay";
    };

    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&one_encoder &two_encoder &three_encoder>;
        triggers-per-rotation = <20>;
};


   EXT_POWER {
  	  compatible = "zmk,ext-power-generic";
      control-gpios = <&gpio1 9 GPIO_ACTIVE_HIGH>;
      init-delay-ms = <50>;
   };

     vbatt: vbatt {
        compatible = "zmk,battery-nrf-vddh";
    };

};

&pinctrl {
   
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 7)>; // WS2812_VEXT_DATA
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 7)>;
            low-power-enable;
        };
    };
};

&uart0 {
	status = "disabled";
};

&spi3 {
	compatible = "nordic,nrf-spim";
	status = "okay";

	pinctrl-0 = <&spi3_default>;
	pinctrl-1 = <&spi3_sleep>;
	pinctrl-names = "default", "sleep";


	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";

		status = "okay";
		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <4000000>;

		/* WS2812 */
		chain-length = <17>; /* There are per-key RGB, but the first 6 are underglow */
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;
		color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
	};
};
/ {
    aliases {
        pwm-red = &pwm_led_red;
        pwm-green = &pwm_led_green;
        pwm-blue = &pwm_led_blue;
    };

    pwm-leds {
        compatible = "pwm-leds";
        
        pwm_led_red: pwm-led-red {
            pwms = <&pwm0 0 PWM_MSEC(1) PWM_POLARITY_NORMAL>;
            label = "PWM RGB Red LED";
        };
        
        pwm_led_green: pwm-led-green {
            pwms = <&pwm0 1 PWM_MSEC(1) PWM_POLARITY_NORMAL>;
            label = "PWM RGB Green LED";
        };
        
        pwm_led_blue: pwm-led-blue {
            pwms = <&pwm0 2 PWM_MSEC(1) PWM_POLARITY_NORMAL>;
            label = "PWM RGB Blue LED";
        };
    };
};

&pwm0 {
    status = "okay";
};

&pinctrl {
    pwm0_default: pwm0_default {
        group1 {
            psels = <NRF_PSEL(PWM_OUT0, 1, 2)>,  // P1.02 (红色阳极)
                    <NRF_PSEL(PWM_OUT1, 1, 4)>,  // P1.04 (绿色阳极)
                    <NRF_PSEL(PWM_OUT2, 1, 6)>;  // P1.06 (蓝色阳极)
        };
    };
    
    pwm0_sleep: pwm0_sleep {
        group1 {
            psels = <NRF_PSEL(PWM_OUT0, 1, 2)>,
                    <NRF_PSEL(PWM_OUT1, 1, 4)>,
                    <NRF_PSEL(PWM_OUT2, 1, 6)>;
            low-power-enable;
        };
    };
};
/ {
    // Existing keyboard config...

    // Add a LED node here if not already defined by the board
    leds {
        compatible = "gpio-leds";
        status_led: status_led {
            gpios = <&gpio1 10 GPIO_ACTIVE_HIGH>; // Replace X and Y with your GPIO pin
            label = "Status LED";
        };
    };
    
    status_led_device: status_led_device {
        compatible = "zmk,status-led";
        led = <&status_led>;
    };
};

